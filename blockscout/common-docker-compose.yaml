volumes:
  redis-data:
  logs:
  dets:

services:
  redis-db:
    extends:
      file: ./services/redis.yml
      service: redis-db



  create-blockscout-db:
    extends:
      file: ./services/db.yml
      service: create-blockscout-db
    networks:
      - database-network  

      

  backend:
    depends_on:
      redis-db:
        condition: service_started
      create-blockscout-db : 
          condition: service_completed_successfully  
    extends:
      file: ./services/backend.yml
      service: backend
    environment:
      - CHAIN_ID=${CHAIN_ID?}
      - SUBNETWORK=${SUBNETWORK?}
      - ETHEREUM_JSONRPC_HTTP_URL=${ETHEREUM_JSONRPC_HTTP_URL?}
      - ETHEREUM_JSONRPC_WS_URL=${ETHEREUM_JSONRPC_WS_URL?}
      - ETHEREUM_JSONRPC_TRACE_URL=${ETHEREUM_JSONRPC_TRACE_URL?}
      - DATABASE_URL=${BLOCKSCOUT_DB_URL}
    networks:
      - database-network  
      - default

  visualizer:
    extends:
      file: ./services/visualizer.yml
      service: visualizer

  sig-provider:
    extends:
      file: ./services/sig-provider.yml
      service: sig-provider

  frontend:
    depends_on:
      - backend
    extends:
      file: ./services/frontend.yml
      service: frontend
    environment:
      - NEXT_PUBLIC_NETWORK_ID=${NEXT_PUBLIC_NETWORK_ID?}

      # Kinda sucks. Why does this communicate via the host network? 
      # I think because this urls will be used in the browser so they should target the host not the container
      - NEXT_PUBLIC_STATS_API_HOST=http://localhost:${PROXY_STATS_PORT}
      - NEXT_PUBLIC_VISUALIZE_API_HOST=http://localhost:${PROXY_VISUALIZER_PORT}
      - NEXT_PUBLIC_API_HOST=localhost:${PROXY_UI_PORT}
      - NEXT_PUBLIC_APP_HOST=localhost:${PROXY_UI_PORT}


  create-stats-db:
    extends:
      file: ./services/db.yml
      service: create-stats-db
    networks:
      - database-network 

  stats:
    depends_on:
      backend:
        condition: service_started
      create-stats-db : 
          condition: service_completed_successfully
    extends:
      file: ./services/stats.yml
      service: stats
    networks:
      - database-network  
      - default    

  user-ops-indexer:
    depends_on:
      backend:
        condition: service_started
      create-stats-db : 
          condition: service_completed_successfully
    extends:
      file: ./services/user-ops-indexer.yml
      service: user-ops-indexer
    networks:
      - database-network  
      - default  
    environment:
      - USER_OPS_INDEXER__INDEXER__RPC_URL=${USER_OPS_INDEXER__INDEXER__RPC_URL}
      - USER_OPS_INDEXER__DATABASE__CONNECT__URL=${BLOCKSCOUT_DB_URL}  
  smart-contract-verifier:
    extends:
      file: ./services/smart-contract-verifier.yml
      service: smart-contract-verifier
    depends_on:
      - backend
      - frontend
  
  proxy:
    depends_on:
      - backend
      - frontend
      - stats
    extends:
      file: ./services/nginx.yml
      service: proxy

networks:
  default:
    driver: bridge

  database-network:
    external: true
    name: database-network